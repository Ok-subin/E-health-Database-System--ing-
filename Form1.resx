<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        cSOmVAAAAABJRU5ErkJggg==
</value>
  </data>
</root>